{"version":3,"file":"ConfigBuilder.js","sourceRoot":"","sources":["../../../src/ConfigBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import type {OutputOptions, Plugin, RollupBuild, RollupOptions, RollupOutput} from 'rollup'\nimport type {SyncHook} from 'tapable'\nimport type {Get, PackageJson, Paths, TsConfigJson} from 'type-fest'\nimport type {InputOptions} from 'zeug/types'\n\nimport fs from 'fs-extra'\nimport * as lodash from 'lodash-es'\nimport {rollup} from 'rollup'\nimport {AsyncSeriesHook, AsyncSeriesWaterfallHook, SyncWaterfallHook} from 'tapable'\nimport * as path from 'zeug/path'\n\nimport {debug} from 'lib/debug.js'\nimport {CommonPlugin} from 'src/plugin/CommonPlugin.js'\nimport {ExternalsPlugin} from 'src/plugin/ExternalsPlugin.js'\nimport {MinifyPlugin} from 'src/plugin/MinifyPlugin.js'\nimport {PkgPlugin} from 'src/plugin/PkgPlugin.js'\nimport {TypescriptPlugin} from 'src/plugin/TypescriptPlugin.js'\n\ntype PluginGenerator = (options?: unknown) => Plugin\n\nexport type Key = Paths<RollupOptions>\nexport type Options = InputOptions<{\n  defaultsType: typeof defaultOptions\n  optionalOptions: {\n    plugins: Array<ConfigBuilderPlugin>\n  }\n}>\n\nexport interface ConfigBuilderPlugin {\n  apply: (configBuilder: ConfigBuilder, hooks: Hooks) => void\n}\nexport const hooks = {\n  finalizeOptions: new SyncWaterfallHook<[Options['merged']]>([`options`]),\n  init: new AsyncSeriesHook<[ConfigBuilder]>([`configBuilder`]),\n  registerPkg: new AsyncSeriesHook<[PackageJson]>([`pkg`]),\n  registerTsconfig: new AsyncSeriesHook<[TsConfigJson]>([`tsconfig`]),\n  beforeBuild: new AsyncSeriesHook<[]>,\n  build: new AsyncSeriesHook<[]>,\n  buildDevelopment: new AsyncSeriesHook<[]>,\n  buildProduction: new AsyncSeriesHook<[]>,\n  buildStatic: new AsyncSeriesHook<[]>,\n  buildWatch: new AsyncSeriesHook<[]>,\n  afterBuild: new AsyncSeriesHook<[]>,\n  finalizeConfig: new AsyncSeriesWaterfallHook<[RollupOptions]>([`config`]),\n}\nexport type Hooks = typeof hooks\nconst defaultOptions = {\n  contextFolder: `.`,\n  env: process.env.NODE_ENV ?? `development`,\n  outputFolder: `out/package`,\n  useDefaultPlugins: true,\n  minify: false as \"aggressive\" | boolean,\n}\nexport class ConfigBuilder {\n  contextFolder: string\n  hooks = new Map<string, AsyncSeriesHook<unknown> | AsyncSeriesWaterfallHook<unknown> | SyncHook<unknown> | SyncWaterfallHook<unknown>>\n  options: Options['merged']\n  outputFolder: string\n  #isProduction: boolean\n  #isWatch = false\n  #pkg: PackageJson | undefined\n  #rollupConfig: RollupOptions = {}\n  #tsconfig: TsConfigJson | undefined\n  constructor(options: Options['parameter'] = {}) {\n    const mergedOptions = {\n      ...defaultOptions,\n      ...options,\n    }\n    this.addBuilderPlugin(new ExternalsPlugin)\n    if (mergedOptions.useDefaultPlugins) {\n      this.addBuilderPlugin(new TypescriptPlugin)\n    }\n    for (const plugin of mergedOptions.plugins ?? []) {\n      this.addBuilderPlugin(plugin)\n    }\n    if (mergedOptions.minify) {\n      const plugin = mergedOptions.minify === `aggressive` ? new MinifyPlugin({terserPreset: `aggressive`}) : new MinifyPlugin\n      this.addBuilderPlugin(plugin)\n    }\n    if (mergedOptions.useDefaultPlugins) {\n      this.addBuilderPlugin(new PkgPlugin)\n      this.addBuilderPlugin(new CommonPlugin)\n    }\n    this.options = hooks.finalizeOptions.call(mergedOptions)\n    this.#isProduction = this.options.env === `production`\n    this.outputFolder = path.resolve(this.options.outputFolder)\n    this.contextFolder = path.resolve(this.options.contextFolder)\n  }\n  get isDevelopment() {\n    return !this.#isProduction\n  }\n  get isProduction() {\n    return this.#isProduction\n  }\n  get isStatic() {\n    return !this.#isWatch\n  }\n  get isWatch() {\n    return this.#isWatch\n  }\n  get pkg() {\n    return this.#pkg\n  }\n  get rollupConfig() {\n    return this.#rollupConfig\n  }\n  get tsconfig() {\n    return this.#tsconfig\n  }\n  addBuilderPlugin(plugin: ConfigBuilderPlugin) {\n    plugin.apply(this, hooks)\n  }\n  addRollupPlugin<T extends PluginGenerator>(plugin: T, options?: Parameters<T>[0]) {\n    if (options !== undefined) {\n      const createdPlugin = plugin(options)\n      debug(`Adding plugin %s with options %O`, createdPlugin.name, options)\n      this.append(`plugins`, createdPlugin)\n    } else {\n      const createdPlugin = plugin()\n      debug(`Adding plugin %s`, createdPlugin.name)\n      this.append(`plugins`, createdPlugin)\n    }\n  }\n  append(key: Key, value: unknown) {\n    const array = this.getEnsuredArray(key)\n    array.push(value)\n  }\n  appendUnique(key: Key, value: unknown) {\n    const array = this.getEnsuredArray(key)\n    if (!array.includes(value)) {\n      array.push(value)\n    }\n  }\n  async build() {\n    await hooks.init.promise(this)\n    const pkgFile = this.fromContextFolder(`package.json`)\n    const pkgExists = await fs.pathExists(pkgFile)\n    if (pkgExists) {\n      const pkg = await fs.readJson(pkgFile) as PackageJson\n      this.#pkg = pkg\n      await hooks.registerPkg.promise(pkg)\n    }\n    const tsconfigFile = this.fromContextFolder(`tsconfig.json`)\n    const tsconfigExists = await fs.pathExists(tsconfigFile)\n    if (tsconfigExists) {\n      const tsconfig = await fs.readJson(tsconfigFile) as TsConfigJson\n      this.#tsconfig = tsconfig\n      await hooks.registerTsconfig.promise(tsconfig)\n    }\n    await hooks.beforeBuild.promise()\n    if (this.isDevelopment) {\n      await hooks.buildDevelopment.promise()\n    } else {\n      await hooks.buildProduction.promise()\n    }\n    if (this.isWatch) {\n      await hooks.buildWatch.promise()\n    } else {\n      await hooks.buildStatic.promise()\n    }\n    await hooks.build.promise()\n    this.setDefault(`output.dir`, this.outputFolder)\n    this.setDefault(`input`, this.fromContextFolder(`src`, `index.js`))\n    await hooks.afterBuild.promise()\n    const config = hooks.finalizeConfig.promise(this.#rollupConfig)\n    return config\n  }\n  async compile() {\n    let bundle: RollupBuild | undefined\n    let output: RollupOutput | undefined\n    try {\n      bundle = await rollup(this.#rollupConfig)\n      const outputOptions = this.#rollupConfig.output as OutputOptions\n      output = await bundle.write(outputOptions)\n      return {\n        bundle,\n        output,\n      }\n    } catch (error) {\n      throw error\n    } finally {\n      await bundle?.close()\n    }\n  }\n  fromContextFolder(...pathSegments: Array<string>) {\n    return path.join(this.contextFolder, ...pathSegments)\n  }\n  fromOutputFolder(...pathSegments: Array<string>) {\n    return path.join(this.outputFolder, ...pathSegments)\n  }\n  get<T extends Key>(key: T): Get<RollupOptions, T> {\n    return lodash.get(this.#rollupConfig, key) as Get<RollupOptions, T>\n  }\n  getEnsuredArray(key: Key) {\n    const array = this.get(key) as Array<unknown> | undefined\n    if (Array.isArray(array)) {\n      return array\n    }\n    const value = []\n    this.set(key, value)\n    return value\n  }\n  has(key: Key) {\n    return lodash.has(this.#rollupConfig, key)\n  }\n  prepend(key: Key, value: unknown) {\n    const array = this.getEnsuredArray(key)\n    array.unshift(value)\n  }\n  prependUnique(key: Key, value: unknown) {\n    const array = this.getEnsuredArray(key)\n    if (!array.includes(value)) {\n      array.unshift(value)\n    }\n  }\n  set<T extends Key>(key: T, value: Get<RollupOptions, T>) {\n    lodash.set(this.#rollupConfig, key, value)\n  }\n  setDefault<T extends Key>(key: T, value: Get<RollupOptions, T>) {\n    if (!this.has(key)) {\n      this.set(key, value)\n    }\n  }\n}\n"]}