{"version":3,"file":"publishimo.js","sourceRoot":"","sources":["../../../../../src/plugin/rollupPlugin/publishimo.ts"],"names":[],"mappings":"AAKA,OAAO,EAAC,OAAO,IAAI,UAAU,EAAC,MAAM,YAAY,CAAA;AAUhD,MAAM,QAAQ,GAAG,CAAC,MAAqB,EAAE,EAAE;IACzC,KAAK,MAAM,EAAE,IAAI,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;QACvC,MAAM,UAAU,GAAG,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAA;QAC3C,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,SAAQ;QACV,CAAC;QACD,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YACxB,SAAQ;QACV,CAAC;QACD,MAAM,iBAAiB,GAAG,cAAc,CAAA;QACxC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC;YAC3C,SAAQ;QACV,CAAC;QACD,OAAO,UAAU,CAAC,EAAE,CAAA;IACtB,CAAC;AACH,CAAC,CAAA;AACD,MAAM,cAAc,GAAG;IACrB,MAAM,EAAE,KAAK;CACd,CAAA;AAED,MAAM,CAAC,OAAO,UAAU,gBAAgB,CAAC,gBAAsC,EAAE;IAC/E,MAAM,OAAO,GAAsB;QACjC,GAAG,cAAc;QACjB,GAAG,aAAa;KACjB,CAAA;IACD,OAAO;QACL,IAAI,EAAE,sBAAsB;QAC5B,KAAK,CAAC,cAAc;YAClB,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;YAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,UAAU,CAAC,CAAA;YAC3F,CAAC;YACD,MAAM,gBAAgB,GAAG,MAAM,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAA;YAC5E,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;YAC7B,MAAM,SAAS,GAAG;gBAChB,GAAG,gBAAgB,CAAC,YAAY;gBAChC,GAAG,OAAO,CAAC,MAAM;aAClB,CAAA;YACD,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;YAC5F,IAAI,CAAC,QAAQ,CAAC;gBACZ,IAAI,EAAE,OAAO;gBACb,QAAQ,EAAE,cAAc;gBACxB,MAAM,EAAE,IAAI;aACb,CAAC,CAAA;QACJ,CAAC;KACF,CAAA;AACH,CAAC","sourcesContent":["import type {Plugin, PluginContext} from 'rollup'\nimport type {Entry, PackageJson} from 'type-fest'\nimport type {InputOptions} from 'zeug/types'\n\nimport {generateDtsBundle} from 'dts-bundle-generator'\nimport {default as publishimo} from 'publishimo'\n\ntype Options = InputOptions<{\n  defaultsType: typeof defaultOptions\n  optionalOptions: {\n    extend: PackageJson\n    publishimoOptions: Parameters<typeof publishimo>[0]\n  }\n}>\n\nconst getEntry = (plugin: PluginContext) => {\n  for (const id of plugin.getModuleIds()) {\n    const moduleInfo = plugin.getModuleInfo(id)\n    if (!moduleInfo) {\n      continue\n    }\n    if (!moduleInfo.isEntry) {\n      continue\n    }\n    const isTypescriptRegex = /\\.[cm]?tsx?$/\n    if (!isTypescriptRegex.test(moduleInfo.id)) {\n      continue\n    }\n    return moduleInfo.id\n  }\n}\nconst defaultOptions = {\n  pretty: false,\n}\n\nexport default function publishimoPlugin(pluginOptions: Options['parameter'] = {}): Plugin {\n  const options: Options['merged'] = {\n    ...defaultOptions,\n    ...pluginOptions,\n  }\n  return {\n    name: `dts-bundle-generator`,\n    async generateBundle() {\n      const entry = getEntry(this)\n      if (!entry) {\n        throw new Error(`No entry found, searched in ${[...this.getModuleIds()].length} modules`)\n      }\n      const publishimoResult = await publishimo.default(options.publishimoOptions)\n      console.dir(publishimoResult)\n      const outputPkg = {\n        ...publishimoResult.generatedPkg,\n        ...options.extend,\n      }\n      const json = options.pretty ? JSON.stringify(outputPkg, null, 2) : JSON.stringify(outputPkg)\n      this.emitFile({\n        type: `asset`,\n        fileName: `package.json`,\n        source: json,\n      })\n    },\n  }\n}\n"]}